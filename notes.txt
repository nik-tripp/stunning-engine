To start, I chose this premade package since it's closest to what I'm most familiar with - I could theoretically have
simplified and just used a basic Node server with the JSON provided rather than a full stack, since this has narrwo scope.

This package includes testing frameworks, which I might use if I get everything else done exceedingly well within the
time limit, but tests weren't specified in the spec, and 3 hours isn't a ton of time

All I have done before starting this repo is this file, cleaning Prisma, customizing the README, and preparing my environment
(Side note: moving back to WSL after using a preconfigured Mac environment for an extended period of time is JARRING)



First step was to create the data model and populate it because knowing what I'm working with in the backend informs
what inputs and other controls I want to provide to the users

Next is brining in Mantine because it's a delightfully straightforward UI package with a killer form management system

Start with a basic form to hit the tRPC endpoint that I need to actually create, so I can get some data back and decide
how to best display it

I went overboard on what the tRPC router supplies, but tbh it felt weird to only be ale to query, and it was easy to
include the other methods

Set up the form and basic page layout, with data feed coming from backend

Note to self: stop getting distracted with trying to customize code styling while you're in the middle of trying to
get a sample done within three hours

Throw in some conditional rendering, space things out, and explain what the page is doing, and I'll call that good

Note: I do not have a strong record of defining layouts well - I prefer to leave that up to actual graphic designers

Oh good lord I just realized that I missed the entire "autocomplete" part. I knew this seemed too simple.

There. Switch to auto-fetching on type, filter options after at least two characters are entered to keep data volume
lower than it could be (at worst), and display tracking info when we're down to a single entry returned

